from pymongo import MongoClient
import os
from dotenv import load_dotenv
from app.auth.auth_handler import hash_password
from faker import Faker
import random
from datetime import datetime

load_dotenv()

# Conex√£o com MongoDB
client = MongoClient(os.getenv("MONGO_URL"))
db = client["centersew"]

# üîÅ Limpar cole√ß√µes antes de inserir novamente
db.users.delete_many({})
db.solicitacoes.delete_many({})

# üë§ Inserir usu√°rios
users = [
    {
        "email": "usuario1@exemplo.com",
        "password": hash_password("123456")
    },
    {
        "email": "costureira@centersew.com",
        "password": hash_password("senha123")
    }
]
user_ids = db.users.insert_many(users).inserted_ids

# üì¶ Dados de base
fake = Faker("pt_BR")

tipos_servico = [
    "Ajuste de uniforme", "Reparo de jaleco", "Bordado de logotipo",
    "Confec√ß√£o de aventais", "Costura de cortina", "Bainha de cal√ßa",
    "Troca de z√≠per", "Aplica√ß√£o de patches", "Uniformes hospitalares",
    "Costura de capa para m√°quina"
]

descricoes_base = [
    "Ajustar tamanho para conforto no ambiente de trabalho.",
    "Costura fina com acabamento refor√ßado.",
    "Aplicar bordado com logotipo da empresa.",
    "Reparo urgente solicitado pelo setor de engenharia.",
    "Solicita√ß√£o recorrente da equipe de manuten√ß√£o.",
    "Confec√ß√£o com tecido fornecido pela empresa.",
    "Padroniza√ß√£o de jalecos do laborat√≥rio.",
    "Servi√ßo de urg√™ncia para visita de auditoria.",
    "Tecido fr√°gil, exige cuidado especial.",
    "Acabamento interno deve ser em vi√©s colorido."
]

localizacoes_alvo = [
    {"tipo": "cidade", "valor": "S√£o Paulo"},
    {"tipo": "raio", "valor": "20km"},
    {"tipo": "estado", "valor": "SP"},
    {"tipo": "raio", "valor": "50km"},
    {"tipo": "cidade", "valor": "Campinas"},
]

solicitacoes = []

for i in range(1, 51):  # 50 registros
    tipo = random.choice(tipos_servico)
    descricao = random.choice(descricoes_base)
    localizacao = random.choice(localizacoes_alvo)
    empresa_id = random.choice(user_ids)

    solicitacoes.append({
        "titulo": f"Solicita√ß√£o #{i:03}",
        "descricao": tipo,
        "empresa_id": str(empresa_id),
        "data_criacao": datetime.utcnow().isoformat(),
        "status": "aberta",
        "interessados": [],  # Inicialmente sem interessados
        "perfil_desejado": {
            "tipo_fiscal": random.sample(["CPF", "CNPJ"], k=random.choice([1, 2])),
            "tipo_servico": tipo,
            "descricao": descricao,
            "localizacao_alvo": localizacao
        }
    })

db.solicitacoes.insert_many(solicitacoes)

print("‚úÖ Seed conclu√≠do com sucesso com estrutura atualizada.")